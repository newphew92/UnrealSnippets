// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Network.h"
#include "Network.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeNetwork() {}
	void AFlag::UpdateScore(int32 Amount)
	{
		Flag_eventUpdateScore_Parms Parms;
		Parms.Amount=Amount;
		ProcessEvent(FindFunctionChecked(NETWORK_UpdateScore),&Parms);
	}
	void AFlag::StaticRegisterNativesAFlag()
	{
		FNativeFunctionRegistrar::RegisterFunction(AFlag::StaticClass(),"OnOverlapBegin",(Native)&AFlag::execOnOverlapBegin);
		FNativeFunctionRegistrar::RegisterFunction(AFlag::StaticClass(),"UpdateScore",(Native)&AFlag::execUpdateScore);
	}
	IMPLEMENT_CLASS(AFlag, 2746198741);
	void AMyGameState::StaticRegisterNativesAMyGameState()
	{
	}
	IMPLEMENT_CLASS(AMyGameState, 189420842);
	void ANetworkCharacter::MyServerFunc()
	{
		ProcessEvent(FindFunctionChecked(NETWORK_MyServerFunc),NULL);
	}
	void ANetworkCharacter::StaticRegisterNativesANetworkCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANetworkCharacter::StaticClass(),"MyServerFunc",(Native)&ANetworkCharacter::execMyServerFunc);
	}
	IMPLEMENT_CLASS(ANetworkCharacter, 184889315);
	void ANetworkGameMode::StaticRegisterNativesANetworkGameMode()
	{
	}
	IMPLEMENT_CLASS(ANetworkGameMode, 13074942);
	void ASaveFlag::StaticRegisterNativesASaveFlag()
	{
	}
	IMPLEMENT_CLASS(ASaveFlag, 631653107);
FName NETWORK_MyServerFunc = FName(TEXT("MyServerFunc"));
FName NETWORK_UpdateScore = FName(TEXT("UpdateScore"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();

	NETWORK_API class UFunction* Z_Construct_UFunction_AFlag_OnOverlapBegin();
	NETWORK_API class UFunction* Z_Construct_UFunction_AFlag_UpdateScore();
	NETWORK_API class UClass* Z_Construct_UClass_AFlag_NoRegister();
	NETWORK_API class UClass* Z_Construct_UClass_AFlag();
	NETWORK_API class UClass* Z_Construct_UClass_AMyGameState_NoRegister();
	NETWORK_API class UClass* Z_Construct_UClass_AMyGameState();
	NETWORK_API class UFunction* Z_Construct_UFunction_ANetworkCharacter_MyServerFunc();
	NETWORK_API class UClass* Z_Construct_UClass_ANetworkCharacter_NoRegister();
	NETWORK_API class UClass* Z_Construct_UClass_ANetworkCharacter();
	NETWORK_API class UClass* Z_Construct_UClass_ANetworkGameMode_NoRegister();
	NETWORK_API class UClass* Z_Construct_UClass_ANetworkGameMode();
	NETWORK_API class UClass* Z_Construct_UClass_ASaveFlag_NoRegister();
	NETWORK_API class UClass* Z_Construct_UClass_ASaveFlag();
	NETWORK_API class UPackage* Z_Construct_UPackage_Network();
	UFunction* Z_Construct_UFunction_AFlag_OnOverlapBegin()
	{
		struct Flag_eventOnOverlapBegin_Parms
		{
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_AFlag();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapBegin"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(Flag_eventOnOverlapBegin_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(SweepResult, Flag_eventOnOverlapBegin_Parms), 0x0000008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, Flag_eventOnOverlapBegin_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, Flag_eventOnOverlapBegin_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, Flag_eventOnOverlapBegin_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, Flag_eventOnOverlapBegin_Parms), 0x0000000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, Flag_eventOnOverlapBegin_Parms), 0x0000000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, Flag_eventOnOverlapBegin_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Flag.h"));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AFlag_UpdateScore()
	{
		UObject* Outer=Z_Construct_UClass_AFlag();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdateScore"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535, sizeof(Flag_eventUpdateScore_Parms));
			UProperty* NewProp_Amount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Amount"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Amount, Flag_eventUpdateScore_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Flag.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Our server function to update the score."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AFlag_NoRegister()
	{
		return AFlag::StaticClass();
	}
	UClass* Z_Construct_UClass_AFlag()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Network();
			OuterClass = AFlag::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AFlag_OnOverlapBegin());
				OuterClass->LinkChild(Z_Construct_UFunction_AFlag_UpdateScore());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFlag_OnOverlapBegin()); // 1379055141
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AFlag_UpdateScore()); // 3605366787
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Flag.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Flag.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AFlag(Z_Construct_UClass_AFlag, TEXT("AFlag"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AFlag);
	UClass* Z_Construct_UClass_AMyGameState_NoRegister()
	{
		return AMyGameState::StaticClass();
	}
	UClass* Z_Construct_UClass_AMyGameState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameState();
			Z_Construct_UPackage_Network();
			OuterClass = AMyGameState::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Score = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Score"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Score, AMyGameState), 0x0000000000000020);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_Score, TEXT("ModuleRelativePath"), TEXT("MyGameState.h"));
				MetaData->SetValue(NewProp_Score, TEXT("ToolTip"), TEXT("Score replicated var."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMyGameState(Z_Construct_UClass_AMyGameState, TEXT("AMyGameState"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMyGameState);
	UFunction* Z_Construct_UFunction_ANetworkCharacter_MyServerFunc()
	{
		UObject* Outer=Z_Construct_UClass_ANetworkCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MyServerFunc"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x80220CC0, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("NetworkCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ANetworkCharacter_NoRegister()
	{
		return ANetworkCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_ANetworkCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_Network();
			OuterClass = ANetworkCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_ANetworkCharacter_MyServerFunc());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, ANetworkCharacter), 0x0000000000020015);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, ANetworkCharacter), 0x0000000000020015);
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, ANetworkCharacter), 0x00000000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, ANetworkCharacter), 0x00000000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_ANetworkCharacter_MyServerFunc()); // 3918750317
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("NetworkCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("NetworkCharacter.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("NetworkCharacter.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("NetworkCharacter.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("NetworkCharacter.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("Follow camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("NetworkCharacter.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom positioning the camera behind the character"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANetworkCharacter(Z_Construct_UClass_ANetworkCharacter, TEXT("ANetworkCharacter"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANetworkCharacter);
	UClass* Z_Construct_UClass_ANetworkGameMode_NoRegister()
	{
		return ANetworkGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_ANetworkGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_Network();
			OuterClass = ANetworkGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2088028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("NetworkGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("NetworkGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANetworkGameMode(Z_Construct_UClass_ANetworkGameMode, TEXT("ANetworkGameMode"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANetworkGameMode);
	UClass* Z_Construct_UClass_ASaveFlag_NoRegister()
	{
		return ASaveFlag::StaticClass();
	}
	UClass* Z_Construct_UClass_ASaveFlag()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Network();
			OuterClass = ASaveFlag::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SaveFlag.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("SaveFlag.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASaveFlag(Z_Construct_UClass_ASaveFlag, TEXT("ASaveFlag"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASaveFlag);
	UPackage* Z_Construct_UPackage_Network()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Network")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x667BC67C;
			Guid.B = 0xB27065D0;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
